doubles=0.01,0.05,0.1
shareInctvExcl=1,5,10,1,5,10
inctvRatioExcl=1,1,1,5,5,5
timestampquery=select max(create_ts),create_user_id,consumer_system_nm from base_irm_pm_data_filter group by create_user_id,consumer_system_nm
parameter_table=select param_nm,param_value,consumer_system_nm from base_irm_parameter
series_dataframe=select filter_field,filter_value,create_user_id,consumer_system_nm,create_ts from base_irm_pm_data_filter
series_table=select series_nm from series where make_nm = 'Toyota'
region_table=select DISTINCT region_area_cd from region where sales_geog_type_cd='US REGION'
inputquery=SELECT * FROM irm_app_logic_tst.incentive_mrm_input
inputquery2=INSERT OVERWRITE TABLE irm_app_logic_tst.incentive_mrm_input SELECT DISTINCT String(q2.make_nm)                                        AS make_nm, \
                String(q2.series_nm)                                      AS series_nm, \
                String(seg.segment_category_nm)                           AS car_truck, \
                String(q2.model_year)                                     AS model_year, \
                String(q2.region_area_cd)                                 AS region_code, \
                Cast(String(Substr(q2.business_month, 5, 2)) AS DOUBLE)    AS month, \
                String(q2.business_month)                                 AS business_month, \
                String(q1.tmna_my_launch_stages)                          AS in_market_stage, \
                Cast(q2.tmna_daily_retail_sales AS                              DOUBLE) AS daily_sales,\
                Cast(q2.tmna_apr_daily_retail_sales AS                          DOUBLE) AS apr_daily_sales,\
                Cast(q3.tmna_apr_retail_sales_share AS                          DOUBLE) AS apr_sales_share,\
                Cast((q4.tmna_pin_apr_incentive/q4.comp_pin_apr_incentive) AS   DOUBLE) AS apr_incentive_comp_ratio,\
                Cast((q5.tmna_apr_base_msrp    /q5.comp_apr_msrp) AS            DOUBLE) AS apr_msrp_comp_ratio,\
                Cast(q4.comp_pin_apr_incentive AS                               DOUBLE) AS apr_comp_incentive,\
                Cast(q2.tmna_lease_daily_retail_sales AS                        DOUBLE) AS lease_daily_sales,\
                Cast(q3.tmna_lease_retail_sales_share AS                        DOUBLE) AS lease_sales_share,\
                Cast((q4.tmna_lase_incentive /q4.comp_lease_incentive) AS       DOUBLE) AS lease_incentive_comp_ratio,\
                Cast((q5.tmna_lease_base_msrp/q5.comp_lease_msrp) AS            DOUBLE) AS lease_msrp_comp_ratio,\
                Cast(q4.comp_lease_incentive AS                                 DOUBLE) AS lease_comp_incentive,\
                Cast(q6.cash_daily_sales AS                                     DOUBLE) AS cash_daily_sales,\
                Cast(q6.cash_sales_share AS                                     DOUBLE) AS cash_sales_share,\
                Cast((q4.tmna_pin_cash_incentive/q4.comp_pin_cash_incentive) AS DOUBLE) AS cash_incentive_comp_ratio,\
                Cast((q5.tmna_cash_base_msrp    /q5.comp_cash_msrp) AS          DOUBLE) AS cash_msrp_comp_ratio,\
                Cast(q4.comp_pin_cash_incentive AS                              DOUBLE) AS cash_comp_incentive,\
                Cast(q6.cash_daily_sales AS                                     DOUBLE) AS cash_all_daily_sales,\
                Cast(q6.cash_sales_share AS                                     DOUBLE) AS cash_all_sales_share,\
                Cast((q4.tmna_pin_cash_incentive/q4.comp_pin_cash_incentive) AS DOUBLE) AS cash_all_incentive_comp_ratio,\
                Cast((q5.tmna_cash_base_msrp    /q5.comp_cash_msrp) AS          DOUBLE) AS cash_all_msrp_comp_ratio,\
                Cast(q4.comp_pin_cash_incentive AS                              DOUBLE) AS cash_all_comp_incentive,\
                String(irm_event_c.flag)                                                               AS contest_month_flg,\
                String(irm_event_t.flag)                                                               AS thrust_month_flg,\
                Cast(q7.tmna_cftp AS DOUBLE)                                            AS cftp,\
                String(q8.tmna_lifecycle_stg)                                                          AS life_cycle_position,\
                String(q8.tmna_major_change_my_indicator)                                              AS major_change,\
                String(q8.tmna_minor_change_my_indicator)                                              AS minor_change,\
                String(q9.competetor_lifecycle_position)                                               AS comp_life_cycle_position,\
                String(q9.competetor_fmc_my_indicator)                                                 AS comp_major_change,\
                String(q9.competetor_fmc_next_my_indicator)                                            AS comp_major_change_plus_1,\
                String(irm_event_j.flag)                                                               AS japan_tsunami,\
                Cast(q10.avg_gas_price AS            DOUBLE)                                       AS gas_price,\
                Cast(q10.gas_price_change_percent AS DOUBLE)                                       AS gas_price_chg_pct \
FROM            irm_app_logic_tst.tmna_non_cash_daily_retail_sales q2 \
LEFT JOIN       irm_app_logic_tst.tmna_my_launch_stages q1 \
ON              Upper(q2.make_nm) = Upper(q1.make_nm) \
AND             Upper(q2.series_nm) = Upper(q1.series_nm) \
AND             q2.model_year = q1.model_year \
AND             q2.business_month = q1.business_month \
LEFT JOIN       irm_app_logic_tst.tmna_retail_sales_share q3 \
ON              Upper(q2.make_nm) = Upper(q3.make_nm) \
AND             Upper(q2.series_nm) = Upper(q3.series_nm) \
AND             q2.business_month = q3.business_month \
AND             q2.region_area_cd = q3.region_area_cd \
LEFT JOIN       irm_app_logic_tst.tmna_comp_pin_incentive q4 \
ON              Upper(q2.make_nm) = Upper(q4.make_nm) \
AND             Upper(q2.series_nm) = Upper(q4.series_nm) \
AND             q2.business_month = q4.business_month \
AND             q2.region_area_cd = q4.region_area_cd \
LEFT JOIN       irm_app_logic_tst.tmna_competitor_base_msrp q5 \
ON              Upper(q2.make_nm) = Upper(q5.make_nm) \
AND             Upper(q2.series_nm) = Upper(q5.series_nm) \
AND             q2.model_year = q5.model_year \
AND             q2.business_month = q5.business_month \
AND             q2.region_area_cd = q5.region_area_cd \
LEFT JOIN       irm_app_logic_tst.tmna_cash_daily_retail_sales q6 \
ON              Upper(q2.make_nm) = Upper(q6.make_nm) \
AND             Upper(q2.series_nm) = Upper(q6.series_nm) \
AND             q2.model_year = q6.model_year \
AND             q2.business_month = q6.business_month \
AND             q2.region_area_cd = q6.region_area_cd \
LEFT JOIN       irm_app_logic_tst.tmna_cftp q7 \
ON              Upper(q2.make_nm) = Upper(q7.make_nm) \
AND             Upper(q2.series_nm) = Upper(q7.series_nm) \
AND             q2.model_year = q7.model_year \
AND             q2.business_month = q7.business_month \
AND             q2.region_area_cd = q7.region_area_cd \
LEFT JOIN       irm_app_logic_tst.tmna_model_change_indicator q8 \
ON              Upper(q2.make_nm) = Upper(q8.make_nm) \
AND             Upper(q2.series_nm) = Upper(q8.series_nm) \
AND             q2.model_year = q8.model_year \
LEFT JOIN       irm_app_logic_tst.comp_model_change_indicator q9 \
ON              Upper(q2.make_nm) = Upper(q9.make_nm) \
AND             Upper(q2.series_nm) = Upper(q9.series_nm) \
AND             q2.model_year = q9.model_year \
LEFT JOIN       irm_app_logic_tst.gas_price_change q10 \
ON              q2.business_month = q10.business_month \
LEFT JOIN       series ser \
ON              Upper(ser.series_nm) = Upper(q2.series_nm) \
LEFT JOIN       segment seg \
ON              Upper(seg.segment_nm) = Upper(ser.segment_nm) \
LEFT JOIN \
                ( \
                       SELECT Split(event_granularity_value,',')[0] as make_nm, \
                              split(event_granularity_value,',')[1] as series_nm, \
                              split(event_granularity_value,',')[2] AS grade_nm, \
                              event_nm                              AS event, \
                              event_impact_cd                       AS flag , \
                              start_dt, \
                              end_dt \
                       FROM   base_irm_event \
                       WHERE  upper(event_nm) = 'CONTEST MONTH' \
                       AND    upper(consumer_system_nm) = '#model' \
                       AND    create_user_id = '#userid' ) irm_event_c \
ON              Upper(irm_event_c.make_nm) = Upper(q2.make_nm) \
AND             Upper(irm_event_c.series_nm) = Upper(q2.series_nm) \
LEFT JOIN \
                ( \
                       SELECT Split(event_granularity_value,',')[0] as make_nm, \
                              split(event_granularity_value,',')[1] as series_nm, \
                              split(event_granularity_value,',')[2] AS grade_nm, \
                              event_nm                              AS event, \
                              event_impact_cd                       AS flag , \
                              start_dt, \
                              end_dt \
                       FROM   base_irm_event \
                       WHERE  upper(event_nm) = 'THRUST MONTH' \
                       AND    upper(consumer_system_nm) = '#model' \
                       AND    create_user_id = '#userid' ) irm_event_t \
ON              Upper(irm_event_t.make_nm) = Upper(q2.make_nm) \
AND             Upper(irm_event_t.series_nm) = Upper(q2.series_nm) \
LEFT JOIN \
                ( \
                       SELECT Split(event_granularity_value,',')[0] as make_nm, \
                              split(event_granularity_value,',')[1] as series_nm, \
                              split(event_granularity_value,',')[2] AS grade_nm, \
                              event_nm                              AS event, \
                              event_impact_cd                       AS flag , \
                              start_dt, \
                              end_dt \
                       FROM   base_irm_event \
                       WHERE  upper(event_nm) = 'TSUNAMI' \
                       AND    upper(consumer_system_nm) = '#model' \
                       AND    create_user_id = '#userid' ) irm_event_j \
ON              Upper(irm_event_j.make_nm) = Upper(q2.make_nm) \
AND             Upper(irm_event_j.series_nm) = Upper(q2.series_nm) \
WHERE           Substr(Regexp_replace(irm_event_c.start_dt, '-', ''),1,6) < q2.business_month \
AND             Substr(Regexp_replace(irm_event_c.end_dt, '-', ''),1,6) > q2.business_month \
AND             Substr(Regexp_replace(irm_event_t.start_dt, '-', ''),1,6) < q2.business_month \
AND             Substr(Regexp_replace(irm_event_t.end_dt, '-', ''),1,6) > q2.business_month \
AND             Substr(Regexp_replace(irm_event_j.start_dt, '-', ''),1,6) < q2.business_month \
AND             Substr(Regexp_replace(irm_event_j.end_dt, '-', ''),1,6) > q2.business_month \
AND             (q8.tmna_lifecycle_stg!="" OR q9.competetor_lifecycle_position)
salesbyregion=select region_area_cd,count(*) as volume from base_tms_us_vehicle_sales group by region_area_cd
################# Logger messages ##############################################################

THRESHOLD_LESS_MSG=VIF Value is less than threshold value.
THRESHOLD_GREATER_MSG =VIF Value is greater than threshold value.
METHOD_ENTRANCE_MSG= I entered into this method for execution
RSQUARE_VALUE_MSG=R Square value:
VIF_MSG=VIF Value:
MEANSQR_MSG=Mean square value:
TOTALSUM_MSG=Total sum of squares:
RESIDUALSUM_MSG=Residual sum of squares:
POST_PROB_WARN=Posterior probability list is not found , suspecting the unknown values.
PRIOR_PROB_WARN=Seems prior probability list is not available.
COEF_WARN=Coefficient list is empty.
DATA_WARN=Seems data is not available while reading.
COLUMN_HEADER_WARN=Columns header information not found in input data file.
MEAN_ERROR=Please check the mean calculation once. Seems problem in calculating the mean values of particular columns.
EMPTY_DATA=No data in input data file.
CHECK_VIF_INPUT=Input list should be passed to VIF Calculation. It seems empty.
EMPTY_VIF_VALUE=VIF Values list is empty.
INDEX_ERROR=Required columns are not found in input data file header information.
NO_DATA=No data found respective columns in the input file.
COEF_ERROR=Seems problem while calculating the coefficients from the model.
EMPTY_COEF_LIST=Empty coefficient list is returned.
EMPTY_ELAC_SET=Empty elasticity set is returned.
EMPTY_PVALUE=P-values list is empty.
MODIFIED_COEF_DETAILS=Coefficient values details are empty.
NO_INDEPENDENT_LIST=No independent list is available.
LESS_RECORDS=No of records in the input file should not be less than the number of independent variables what we provided.
ERROR_FREE_LIST_MSG=Error free list is empty.
EMPTY_VIF_VALUES=Empty VIF List.
INVALID_INPUT_COEFF=Invalid input coefficient list passed.
SIGN_DETAILS_MSG=Problem while preparing the sign list.
NO_PROPERTIES=Required properties are missing for this module.
MODEL_EXCE=Linear model is not generated.
VIF_INPUT_LIST=Input variables list for the VIF Calculation:
EMPTY_VAR_LIST=Empty variables list passed to VIF Calculation.
EXCLUDE_COLUMN_LIST=Exclude columns list:
EMPTY_LIST=Final variables list is empty.
NORMAL_COLUMN_INDEXES=Normal column indexes:
EXCLUDE_COLUMN_INDEXES=Exclude column indexes:
VAR_INPUT_PROPERTIES=Variable Selection Input properties:
REQUIRED_COLUMN_LIST=RequiredColumnsList :
FINAL_VARIABLES_LIST=Final Variables List :
MIN_COLUMN=Minimum Column :
COEF_VALUES=Coefficient Values :
EMPTY_SIGN=Empty sign details :
ELAST_EXCE=We got exception while calculating the elasticity values with minimum and maximum values.
COEFF_EXCE=We got exception while calculating the coefficient values with mean and elasticity values.
VAR_SEL_OUTPUT=Variable Selection Output:
PRIOR_PROB_LIST_EXCE= Prior probability list is not found.
LIKELIHOOD_LIST_EXCE= Likelihood list is not found.
MODIFIED_COEF_DETAILS=Modified coefficient details: 
COEF_LIST_DETAILS=Coefficient List Details : 


########################## Required properties names ######################################################

INCENTIVE_COMP_RATIO=incentive_comp_ratio
COMP_INCENTIVE=comp_incentive
CFTP=cftp
PRED_VALUE=pred_value
MSRP_COMP_RATIO=msrp_comp_ratio
RESIDUAL=residual
DEPENDENT_VAR=dep.var
INCLUSIVE_VAR=incl.var
INDEPEN_VAR_LIST=inctv_indep_var_list
SIGN_VAR_LIST=sign_indep_var_list
VIF_CUTOFF=vif_cutoff
PVALUE=p_value
GAS_CHG=gas_price_chg_pct
MIN_INCTV_ELAS=min_inctv_elas
MAX_INCTV_ELAS=max_inctv_elas
INCTV_ELAS_RADIUS=inctv_elas_radius
PRIOR_INCTV_MEAN=prior_inctv_mean
PRIOR_INCTV_STD_DEV=prior_inctv_std_dev
PRIOR_ADJ_FACTOR_NO_BEST_MODEL=prior.adj.factor.no.best.model
NO_ENOUGH_DATA_STD_DEV_FACTOR=no_enough_data_std_dev_factor
STEPSIZE=stepsize
INCTV_PCT_RATIO=use_inctv_pct_ratio

############################################################################################################

EXC_MSG=Problem with getting linear model.
NO_DB_PROPS=No database properties found from input.
EMPTY_QUERY_PARAMS=No properties found from the properties file.
NO_HIVE_CON=No hive context found.
NO_INPUT_TABLE_DATA=No input table data found.
NO_SERIES_REGION=No series or region data found.
NO_FRAME_DATA=No frame data found.
#Parameters for running in Toyota environment required for HiveDataLoader
userid=405016
model=MRM
database_base_schema=irm
database_integrated_schema=irm_app_logic_dev

#Params for running a CSV through CSVDataloader
series_data=file:////Users/Subu/Desktop/Work/KaizenAnalytix/MSRPElasticityModel/src/test/resources/SERIES_LIST.csv
region_data=file:////Users/Subu/Desktop/Work/KaizenAnalytix/MSRPElasticityModel/src/test/resources/TMS_REGION.csv
#MSRP_data=file:////Users/Subu/Desktop/Work/KaizenAnalytix/MSRPElasticityModel/src/test/resources/MSRP_MRM_INPUT_999_725.csv
MSRP_data=file:////Users/Subu/Downloads/msrp_data_dev.csv
parameter_file=file:////Users/Subu/Desktop/Work/KaizenAnalytix/MSRPElasticityModel/src/test/resources/IRM_Parameter20160606_prod.csv
filter_file=file:////Users/Subu/Desktop/Work/KaizenAnalytix/MSRPElasticityModel/src/test/resources/FILTER_VALUES.csv
 
#Queries
# not implemented
#national_group_by=make_nm,series_fuel_nm,car_truck,model_year,month,business_month

skip-driver-table-population=true
timestampquery=select max(create_ts),create_user_id,consumer_system_nm from ${database_base_schema}.base_irm_pm_data_filter where create_user_id='${userid}' and consumer_system_nm='${model}' group by create_user_id,consumer_system_nm
parameter_table=select param_nm,consumer_system_nm,param_value,consumer_system_nm,consumer_system_nm,param_value from ${database_base_schema}.base_irm_parameter
series_dataframe=select filter_field,filter_value,create_user_id,consumer_system_nm,create_ts from ${database_base_schema}.base_irm_pm_data_filter
series_table=select series_fuel_nm from ${database_base_schema}.series where make_nm = 'Toyota'
region_table=select DISTINCT region_area_cd from region where sales_geog_type_cd='US REGION'
priortimestamp=select max(effective_date),raw_series_fuel_nm,raw_region_cd from ${database_base_schema}.raw_irm_pm_msrp_elasticity group by raw_series_fuel_nm,raw_region_cd \
			where raw_series_fuel_nm = '${series_fuel_nm}' and raw_region_cd = '${region_cd}'
prioroutputtable=select raw_series_fuel_nm,raw_region_code,elasticity_qty,effective_date from ${database_base_schema}.raw_irm_pm_msrp_elasticity where \
			"effective_date = '${effective_date}' and raw_series_fuel_nm  = '${series_fuel_nm}' and raw_region_cd = '${region_cd}'
inputquery=SELECT * FROM ${database_integrated_schema}.mrm_msrp_input 
#inputquery=SELECT * FROM ${database_integrated_schema}.mrm_msrp_input where series_fuel_nm='Camry' and region_code=110
inputquery2=INSERT OVERWRITE TABLE ${database_integrated_schema}.mrm_msrp_input SELECT DISTINCT String(q2.make_nm)                                            AS make_nm, \ 
                String(q2.series_fuel_nm)                                          AS series_fuel_nm, \ 
                String(seg.segment_category_nm)                               AS car_truck, \ 
                String(q2.model_year)                                         AS model_year, \ 
                String(q2.region_area_cd)                                     AS region_code, \ 
                Cast(String(Substr(q2.business_month, 5, 2)) AS DOUBLE)       AS month, \ 
                String(q2.business_month)                                     AS business_month, \ 
                String(q1.tmna_my_launch_stages)                              AS in_market_stage, \ 
                q1.tmna_months_in_market                                      AS months_in_market, \ 
                Cast(q2.tmna_daily_retail_sales AS DOUBLE) 					  AS daily_sales, \
                Cast(q5.tmna_base_msrp AS DOUBLE)                             AS base_msrp, \ 
                Cast(q5.comp_msrp AS DOUBLE)                                  AS comp_msrp, \ 
                q8.tmna_yrs_since_major_change                                AS years_since_major_change, \ 
                q9.competetor_yrs_since_major_change                          AS competetor_yrs_since_major_change, \ 
                pin.inc_spending_per_unit_amt                                 AS incentive , \ 
                Cast(q3.tmna_retail_sales_share AS DOUBLE)                    AS sales_share, \ 
                Cast((q4.tmna_pin_incentive/q4.comp_pin_incentive) AS DOUBLE) AS incentive_comp_ratio, \ 
                Cast((q5.tmna_base_msrp    /q5.comp_msrp) AS DOUBLE)          AS msrp_comp_ratio, \ 
                Cast(q4.comp_pin_incentive AS DOUBLE)                         AS comp_incentive, \ 
                Cast(q7.tmna_cftp AS DOUBLE)                                  AS cftp, \ 
                String(q8.tmna_lifecycle_stg)                                 AS life_cycle_position, \ 
                String(q8.tmna_major_change_my_indicator)                     AS major_change, \ 
                String(q8.tmna_minor_change_my_indicator)                     AS minor_change, \ 
                String(q9.competetor_lifecycle_position)                      AS comp_life_cycle_position, \ 
                String(q9.competetor_fmc_my_indicator)                        AS comp_major_change, \ 
                String(q9.competetor_fmc_next_my_indicator)                   AS comp_major_change_plus_1, \ 
                String(irm_event_j.flag)                                      AS japan_tsunami, \ 
                Cast(q10.avg_gas_price AS DOUBLE)                             AS gas_price, \ 
                Cast(q10.gas_price_change_percent AS DOUBLE)                  AS gas_price_chg_pct \ 
                FROM            (select * from ${database_integrated_schema}.tmna_non_cash_daily_retail_sales where make_nm = 'Toyota') q2 \ 
LEFT JOIN       ${database_integrated_schema}.tmna_my_launch_stages q1 \ 
ON              Upper(q2.make_nm) = Upper(q1.make_nm) \ 
AND             Upper(q2.series_fuel_nm) = Upper(q1.series_fuel_nm) \ 
AND             q2.model_year = q1.model_year \ 
AND             q2.business_month = q1.business_month \ 
LEFT JOIN       ${database_integrated_schema}.tmna_retail_sales_share q3 \ 
ON              Upper(q2.make_nm) = Upper(q3.make_nm) \ 
AND             Upper(q2.series_fuel_nm) = Upper(q3.series_fuel_nm) \ 
AND             q2.business_month = q3.business_month \ 
AND             q2.region_area_cd = q3.region_area_cd \ 
LEFT JOIN       ${database_integrated_schema}.tmna_comp_pin_incentive q4 \ 
ON              Upper(q2.make_nm) = Upper(q4.make_nm) \ 
AND             Upper(q2.series_fuel_nm) = Upper(q4.series_fuel_nm) \ 
AND             q2.business_month = q4.business_month \ 
AND             q2.region_area_cd = q4.region_area_cd \ 
LEFT JOIN       ${database_integrated_schema}.tmna_competitor_base_msrp q5 \ 
ON              Upper(q2.make_nm) = Upper(q5.make_nm) \ 
AND             Upper(q2.series_fuel_nm) = Upper(q5.series_fuel_nm) \ 
AND             q2.model_year = q5.model_year \ 
AND             q2.business_month = q5.business_month \ 
AND             q2.region_area_cd = q5.region_area_cd \ 
LEFT JOIN       ${database_integrated_schema}.tmna_cftp q7 \ 
ON              Upper(q2.make_nm) = Upper(q7.make_nm) \ 
AND             Upper(q2.series_fuel_nm) = Upper(q7.series_fuel_nm) \ 
AND             q2.model_year = q7.model_year \ 
AND             q2.business_month = q7.business_month \ 
AND             q2.region_area_cd = q7.region_area_cd \ 
LEFT JOIN       (select distinct make_nm,series_fuel_nm,region_area_cd,business_month,inc_spending_per_unit_amt from ${database_base_schema}.base_pin_incentive_isr where upper(model_year)='ALL MY') pin \ 
ON              Upper(q2.make_nm) = Upper(pin.make_nm) \ 
AND             Upper(q2.series_fuel_nm) = Upper(pin.series_fuel_nm) \ 
AND             q2.business_month = pin.business_month \ 
AND             q2.region_area_cd = pin.region_area_cd \ 
LEFT JOIN       ${database_integrated_schema}.tmna_model_change_indicator q8 \ 
ON              Upper(q2.make_nm) = Upper(q8.make_nm) \ 
AND             Upper(q2.series_fuel_nm) = Upper(q8.series_fuel_nm) \ 
AND             q2.model_year = q8.model_year \ 
LEFT JOIN       ${database_integrated_schema}.comp_model_change_indicator q9 \ 
ON              Upper(q2.make_nm) = Upper(q9.make_nm) \ 
AND             Upper(q2.series_fuel_nm) = Upper(q9.series_fuel_nm) \ 
AND             q2.model_year = q9.model_year \ 
LEFT JOIN       ${database_integrated_schema}.gas_price_change q10 \ 
ON              q2.business_month = q10.business_month \ 
LEFT JOIN       ${database_base_schema}.series ser \ 
ON              Upper(ser.series_fuel_nm) = Upper(q2.series_fuel_nm) \ 
LEFT JOIN       ${database_base_schema}.segment seg \ 
ON              Upper(seg.segment_nm) = Upper(ser.segment_nm) \ 
LEFT JOIN \ 
                ( \ 
                       SELECT Split(event_granularity_value,',')[0] as make_nm, \ 
                              split(event_granularity_value,',')[1] as series_fuel_nm, \ 
                              split(event_granularity_value,',')[2] AS grade_nm, \ 
                              event_nm                              AS event, \ 
                              event_impact_cd                       AS flag , \ 
                              start_dt, \ 
                              end_dt \ 
                       FROM   ${database_base_schema}.base_irm_event \ 
                       WHERE  upper(event_nm) = 'TSUNAMI' \ 
                       AND    array_contains(split(upper(consumer_system_nm), ','), ${model}) \ 
                       AND    create_user_id = ${userid} ) irm_event_j \ 
ON              Upper(irm_event_j.make_nm) = Upper(q2.make_nm) \ 
AND             Upper(irm_event_j.series_fuel_nm) = Upper(q2.series_fuel_nm) \ 
WHERE           Substr(Regexp_replace(irm_event_j.start_dt, '-', ''),1,6) < q2.business_month \ 
AND             Substr(Regexp_replace(irm_event_j.end_dt, '-', ''),1,6) > q2.business_month  
salesbyregion=select region_area_cd,count(*) as volume from base_tms_us_vehicle_sales group by region_area_cd
